{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useState } from 'react';\nimport Title from \"../components/Title\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GameScreen() {\n  var initialGuess = generateRandomBetween();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentGuess = _useState2[0],\n    setCurrentGuess = _useState2[1];\n  function generateRandomBetween(min, max, exclude) {\n    var rndNum = Math.floor(Math.random() * (max - min)) + min;\n    if (rndNum === exclude) {\n      return generateRandomBetween(min, max, exclude);\n    } else {\n      return rndNum;\n    }\n  }\n  return _jsxs(View, {\n    style: styles.screens,\n    children: [_jsx(Title, {\n      children: \"Opponent Guess\"\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Hallo\"\n      })\n    })]\n  });\n}\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screens: {\n    flex: 1,\n    padding: 24\n  }\n});","map":{"version":3,"names":["React","Text","View","StyleSheet","useState","Title","jsx","_jsx","jsxs","_jsxs","GameScreen","initialGuess","generateRandomBetween","_useState","_useState2","_slicedToArray","currentGuess","setCurrentGuess","min","max","exclude","rndNum","Math","floor","random","style","styles","screens","children","create","flex","padding"],"sources":["/Users/bilalahmad/Downloads/starting-project 2/screens/GameScreen.js"],"sourcesContent":["import React from 'react'\nimport { Text,View,StyleSheet } from 'react-native'\nimport { useState } from 'react';\nimport Title from '../components/Title';\nfunction GameScreen() \n{   const initialGuess=generateRandomBetween();\n    const[currentGuess,setCurrentGuess]=useState();\n    function generateRandomBetween(min, max, exclude) {\n    const rndNum = Math.floor(Math.random() * (max - min)) + min;\n  \n    if (rndNum === exclude) {\n      return generateRandomBetween(min, max, exclude);\n    } else {\n      return rndNum;\n    }\n  }\n  return (\n    <View style={styles.screens} >\n   <Title>Opponent Guess</Title>\n   <View >\n    <Text>Hallo</Text>\n    </View>\n    </View>\n  )\n}\n\nexport default GameScreen;\nconst styles = StyleSheet.create({\n    screens:{flex:1,padding:24},\n   \n\n  });\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACxC,SAASC,UAAUA,CAAA,EACnB;EAAI,IAAMC,YAAY,GAACC,qBAAqB,CAAC,CAAC;EAC1C,IAAAC,SAAA,GAAoCT,QAAQ,CAAC,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,YAAY,GAAAF,UAAA;IAACG,eAAe,GAAAH,UAAA;EAClC,SAASF,qBAAqBA,CAACM,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;IAClD,IAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,GAAG,GAAGD,GAAG,CAAC,CAAC,GAAGA,GAAG;IAE5D,IAAIG,MAAM,KAAKD,OAAO,EAAE;MACtB,OAAOR,qBAAqB,CAACM,GAAG,EAAEC,GAAG,EAAEC,OAAO,CAAC;IACjD,CAAC,MAAM;MACL,OAAOC,MAAM;IACf;EACF;EACA,OACEZ,KAAA,CAACP,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAAC,QAAA,GAC7BrB,IAAA,CAACF,KAAK;MAAAuB,QAAA,EAAC;IAAc,CAAO,CAAC,EAC7BrB,IAAA,CAACL,IAAI;MAAA0B,QAAA,EACJrB,IAAA,CAACN,IAAI;QAAA2B,QAAA,EAAC;MAAK,CAAM;IAAC,CACZ,CAAC;EAAA,CACD,CAAC;AAEX;AAEA,eAAelB,UAAU;AACzB,IAAMgB,MAAM,GAAGvB,UAAU,CAAC0B,MAAM,CAAC;EAC7BF,OAAO,EAAC;IAACG,IAAI,EAAC,CAAC;IAACC,OAAO,EAAC;EAAE;AAG5B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}