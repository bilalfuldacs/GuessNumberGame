{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useState, useEffect } from 'react';\nimport Title from \"../components/ui/Title\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport { Ionicons } from '@expo/vector-icons';\nimport GuessLogItem from \"../components/game/GuessLogItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\nvar minBoundary = 1;\nvar maxBoundary = 100;\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber,\n    onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n  var _useState = useState(initialGuess),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentGuess = _useState2[0],\n    setCurrentGuess = _useState2[1];\n  var _useState3 = useState([initialGuess]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    guessRound = _useState4[0],\n    setguessRound = _useState4[1];\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRound.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n  useEffect(function () {\n    minBoundary = 1, maxBoundary = 1;\n  }, []);\n  var nextGuessHandler = function nextGuessHandler(direction) {\n    if (direction === \"lower\" && currentGuess < userNumber || direction === \"higher\" && currentGuess > userNumber) {\n      Alert.alert('Dont Lie', 'You are lying', [{\n        text: 'Sorry',\n        style: 'destructive'\n      }]);\n    }\n    if (direction === \"lower\") {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n    var newRaandNum = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRaandNum);\n    setguessRound(function (prev) {\n      return [newRaandNum].concat(_toConsumableArray(prev));\n    });\n  };\n  var guessRoundListLenght = guessRound.length;\n  return _jsxs(View, {\n    style: styles.screens,\n    children: [_jsx(Title, {\n      children: \"Opponent Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        style: styles.instructionText,\n        children: \"Lower hiigher\"\n      }), _jsxs(View, {\n        style: styles.Btncontainer,\n        children: [_jsx(View, {\n          style: styles.Btncontainers,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, \"lower\"),\n            children: _jsx(Ionicons, {\n              name: \"md-remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        }), _jsx(View, {\n          style: styles.Btncontainers,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, \"higher\"),\n            children: _jsx(Ionicons, {\n              name: \"md-add\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      children: _jsx(FlatList, {\n        data: guessRound,\n        renderItem: function renderItem(itemData) {\n          return _jsx(GuessLogItem, {\n            roundNum: guessRoundListLenght - itemData.index,\n            guess: itemData.item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        }\n      })\n    })]\n  });\n}\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screens: {\n    flex: 1,\n    padding: 24\n  },\n  Btncontainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    justifyContent: 'space-around'\n  },\n  Btncontainers: {\n    flex: 3\n  },\n  instructionText: {\n    marginBottom: 22\n  },\n  listContainer: {\n    flex: 1,\n    padding: 40\n  }\n});","map":{"version":3,"names":["React","Text","View","StyleSheet","Alert","FlatList","useState","useEffect","Title","NumberContainer","PrimaryButton","Card","InstructionText","Ionicons","GuessLogItem","jsx","_jsx","jsxs","_jsxs","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","_ref","userNumber","onGameOver","initialGuess","_useState","_useState2","_slicedToArray","currentGuess","setCurrentGuess","_useState3","_useState4","guessRound","setguessRound","length","nextGuessHandler","direction","alert","text","style","newRaandNum","prev","concat","_toConsumableArray","guessRoundListLenght","styles","screens","children","instructionText","Btncontainer","Btncontainers","onPress","bind","name","size","color","data","renderItem","itemData","roundNum","index","guess","item","keyExtractor","create","flex","padding","flexDirection","paddingHorizontal","justifyContent","marginBottom","listContainer"],"sources":["/Users/bilalahmad/Downloads/starting-project 2/screens/GameScreen.js"],"sourcesContent":["import React from 'react'\nimport { Text,View,StyleSheet,Alert, FlatList } from 'react-native'\nimport { useState,useEffect } from 'react';\nimport Title from '../components/ui/Title';\nimport NumberContainer from '../components/game/NumberContainer';\nimport PrimaryButton from '../components/ui/PrimaryButton';\nimport Card from '../components/ui/Card';\nimport InstructionText from '../components/ui/InstructionText';\nimport {Ionicons} from '@expo/vector-icons';\nimport GuessLogItem from '../components/game/GuessLogItem';\nfunction generateRandomBetween(min, max, exclude) {\n    const rndNum = Math.floor(Math.random() * (max - min)) + min;\n  \n    if (rndNum === exclude) {\n      return generateRandomBetween(min, max, exclude);\n    } else {\n      return rndNum;\n    }\n}\nlet minBoundary=1;\nlet maxBoundary=100;\nfunction GameScreen({userNumber,onGameOver}) \n{   const initialGuess=generateRandomBetween(1,100,userNumber);\n    const[currentGuess,setCurrentGuess]=useState(initialGuess);\n    const[guessRound,setguessRound]=useState([initialGuess]);\n    useEffect(()=>{if(currentGuess===userNumber){\n        onGameOver(guessRound.length);\n    }},[currentGuess,userNumber,onGameOver]);\n    useEffect(()=>{minBoundary=1,maxBoundary=1},[]);\n    const nextGuessHandler=(direction)=>{\n        if((direction===\"lower\" && currentGuess<userNumber )||\n        (direction===\"higher\" && currentGuess>userNumber))\n        {\n            Alert.alert(\n                'Dont Lie',\n                'You are lying',\n                [\n                  {\n                    text: 'Sorry',\n                    style: 'destructive',\n                   \n                  },\n                ]\n              );\n        }\n        if(direction===\"lower\")\n    {maxBoundary=currentGuess;\n       }\n    else{\n        minBoundary=currentGuess+1;\n      \n    }\n    const newRaandNum=generateRandomBetween(minBoundary,maxBoundary,currentGuess);\n    setCurrentGuess(newRaandNum);\n    setguessRound(prev=>[newRaandNum,...prev])\n    }  \n  const guessRoundListLenght=guessRound.length; \n  return (\n    <View style={styles.screens} >\n   <Title>Opponent Guess</Title>\n  <NumberContainer>{currentGuess}</NumberContainer>\n   <Card >\n    <InstructionText style={styles.instructionText}>Lower hiigher</InstructionText>\n    <View style={styles.Btncontainer}>\n        <View style={styles.Btncontainers}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this,\"lower\")}>\n            <Ionicons name=\"md-remove\" size={24} color=\"white\"/>\n            \n            </PrimaryButton></View>\n\n<View style={styles.Btncontainers}><PrimaryButton onPress={nextGuessHandler.bind(this,\"higher\")}>\n<Ionicons name=\"md-add\" size={24} color=\"white\"/>\n    </PrimaryButton></View>\n\n</View>\n    </Card>\n    <View>\n\n<FlatList data={guessRound} renderItem={(itemData)=><GuessLogItem roundNum={guessRoundListLenght-itemData.index} guess={itemData.item}/>}\nkeyExtractor={(item)=>item}/>\n    </View>\n    </View>\n  )\n}\n\nexport default GameScreen;\nconst styles = StyleSheet.create({\n    screens:{flex:1,padding:24},\n    Btncontainer: {\n        \n        flexDirection:'row', \n      paddingHorizontal:10,\n      justifyContent:'space-around'\n            },\n            Btncontainers: {\n flex:3, \n \n           \n                 },\n                 instructionText:{\n                    marginBottom:22,\n                 },\n                 listContainer:{\n                  flex:1,\n                  padding:40,\n            \n                 }\n  });\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}